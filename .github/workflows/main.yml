{
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Gitpod Flex Configuration"
     },
     "Parameters": [
      "RunnerID",
      "ExchangeToken",
      "APIEndpoint",
      "GatewayAPIEndpoint"
     ]
    },
    {
     "Label": {
      "default": "Network Configuration (Mandatory)"
     },
     "Parameters": [
      "VPC",
      "EC2RunnerAzs",
      "EC2RunnerInstancesSubnet"
     ]
    },
    {
     "Label": {
      "default": "Network Configuration (Optional)"
     },
     "Parameters": [
      "EC2SecurityGroup"
     ]
    },
    {
     "Label": {
      "default": "Metrics Backend Configuration (Optional)"
     },
     "Parameters": [
      "EnableMetrics",
      "PrometheusURL",
      "PrometheusUser",
      "PrometheusPassword"
     ]
    }
   ],
   "ParameterLabels": {
    "APIEndpoint": {
     "default": "Gitpod Flex API Endpoint (autogenerated by Gitpod - do not update)"
    },
    "EC2RunnerAzs": {
     "default": "Availability Zones"
    },
    "EC2RunnerInstancesSubnet": {
     "default": "EC2 instances subnets"
    },
    "EC2SecurityGroup": {
     "default": "Custom Security Group for Gitpod Environments (optional)"
    },
    "EnableMetrics": {
     "default": "Enable Metrics Collection?"
    },
    "ExchangeToken": {
     "default": "Runner Token (autogenerated by Gitpod - do not update)"
    },
    "GatewayAPIEndpoint": {
     "default": "Gateway API Endpoint (autogenerated by Gitpod - do not update)"
    },
    "PrometheusPassword": {
     "default": "Prometheus Authentication - Password"
    },
    "PrometheusURL": {
     "default": "Prometheus Endpoint"
    },
    "PrometheusUser": {
     "default": "Prometheus Authentication - Username"
    },
    "RunnerID": {
     "default": "Runner ID (autogenerated by Gitpod - do not update)"
    },
    "VPC": {
     "default": "VPC"
    }
   }
  }
 },
 "Outputs": {
  "ReleaseVersion": {
   "Description": "Release version of the EC2 Runner stack",
   "Value": "20241001.5"
  },
  "ContainerRegistryBucketOutput": {
   "Description": "S3 bucket to store container images",
   "Value": {
    "Ref": "ContainerRegistryBucket9EFCD2D4"
   }
  },
  "DynamoTableNameOutput": {
   "Description": "Table name of the dynamodb table for the runner resources",
   "Value": {
    "Ref": "ec2runnertableresourcesF4296A57"
   }
  },
  "EnvironmentSecurityGroupOutput": {
   "Description": "The ID of the environment security group to allow inbound connections (SSH and supervisor)",
   "Value": {
    "Fn::If": [
     "CustomSGNotProvided",
     {
      "Fn::GetAtt": [
       "allowaccessstoenvironments",
       "Id"
      ]
     },
     {
      "Ref": "EC2SecurityGroup"
     }
    ]
   }
  },
  "InstanceProfileNameOutput": {
   "Description": "The name of the InstanceProfile to use in the environment EC2 instances",
   "Value": {
    "Ref": "gitpodec2runnerinstanceprofileD247FB88"
   }
  },
  "S3AccessRoleArn": {
   "Description": "ARN of the S3 Access Role",
   "Value": {
    "Fn::GetAtt": [
     "S3AccessRole49D67050",
     "Arn"
    ]
   }
  },
  "RunnerSSMKeyOutput": {
   "Description": "SSM Parameter Store key for the EC2 runner configuration",
   "Value": {
    "Fn::Join": [
     "",
     [
      "/gitpod/runner/",
      {
       "Ref": "RunnerID"
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "RunnerID": {
   "Type": "String",
   "Default": "Insert Runner ID",
   "Description": "Runner ID - Unique identifier for your Runner"
  },
  "ExchangeToken": {
   "Type": "String",
   "Default": "Choose a runner token ",
   "Description": "Token for the EC2 runner to authenticate with Gitpod Flex API"
  },
  "APIEndpoint": {
   "Type": "String",
   "Default": "https://app.gitpod.io/api ",
   "Description": "The URL of the Gitpod Flex API"
  },
  "VPC": {
   "Type": "AWS::EC2::VPC::Id",
   "Default": "Choose a VPC ID ",
   "Description": "The ID of the VPC"
  },
  "EC2RunnerAzs": {
   "Type": "List<AWS::EC2::AvailabilityZone::Name>",
   "Description": "Availabilities to lookup an existing VPC. Choose one or more, 2 or 3 are recommended."
  },
  "EC2RunnerInstancesSubnet": {
   "Type": "List<AWS::EC2::Subnet::Id>",
   "Description": "Subnets for the EC2 Runner instances. Choose one or more."
  },
  "EC2SecurityGroup": {
   "Type": "String",
   "Default": "",
   "AllowedPattern": "^$|^sg-[a-zA-Z0-9]+$",
   "Description": "Security group for the EC2 Runner instances. It must allow incoming traffic to port 22 (SSH)"
  },
  "GatewayAPIEndpoint": {
   "Type": "String",
   "Default": "https://us01.gitpod.dev:8443",
   "AllowedPattern": "^http(s?)://.*$",
   "ConstraintDescription": "Must be a valid HTTPS URL.",
   "Description": "Gateway endpoint used for secure connectivity to the EC2 Runner. Set if you have a custom gateway deployed, otherwise use default."
  },
  "EnableMetrics": {
   "Type": "String",
   "Default": "false",
   "AllowedValues": [
    "true",
    "false"
   ],
   "Description": "Toggle metrics collection (true/false). Sends metrics to your backend of choice."
  },
  "PrometheusURL": {
   "Type": "String",
   "Default": "",
   "Description": "Fully qualified URL to the Prometheus server"
  },
  "PrometheusUser": {
   "Type": "String",
   "Default": "",
   "Description": "Prometheus Authentication - Username"
  },
  "PrometheusPassword": {
   "Type": "String",
   "Default": "",
   "Description": "Password for Prometheus authentication",
   "NoEcho": true
  }
 },
 "Conditions": {
  "CustomSGNotProvided": {
   "Fn::Equals": [
    {
     "Ref": "EC2SecurityGroup"
    },
    ""
   ]
  },
  "PrometheusCondition": {
   "Fn::Equals": [
    {
     "Ref": "EnableMetrics"
    },
    "true"
   ]
  }
 },
 "Resources": {
  "MetricsConfigSecretA91972C8": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "SecretString": {
     "Fn::Sub": [
      "{\n\"enableMetrics\": ${enableMetrics},\n\"url\": \"${prometheusURL}\",\n\"user\": \"${prometheusUser}\",\n\"password\": \"${prometheusPassword}\"\n}",
      {
       "enableMetrics": {
        "Ref": "EnableMetrics"
       },
       "prometheusPassword": {
        "Ref": "PrometheusPassword"
       },
       "prometheusURL": {
        "Ref": "PrometheusURL"
       },
       "prometheusUser": {
        "Ref": "PrometheusUser"
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "AppManagerCFNStackKey",
      "Value": {
       "Fn::Sub": [
        "${stackId}",
        {
         "stackId": {
          "Ref": "AWS::StackId"
         }
        }
       ]
      }
     },
     {
      "Key": "gitpod:stack",
      "Value": {
       "Fn::Sub": [
        "${stackName}",
        {
         "stackName": {
          "Ref": "AWS::StackName"
         }
        }
       ]
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ContainerRegistryBucket9EFCD2D4": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 30,
       "Status": "Enabled"
      }
     ]
    },
    "Tags": [
     {
      "Key": "AppManagerCFNStackKey",
      "Value": {
       "Fn::Sub": [
        "${stackId}",
        {
         "stackId": {
          "Ref": "AWS::StackId"
         }
        }
       ]
      }
     },
     {
      "Key": "gitpod:stack",
      "Value": {
       "Fn::Sub": [
        "${stackName}",
        {
         "stackName": {
          "Ref": "AWS::StackName"
         }
        }
       ]
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ec2runnertableresourcesF4296A57": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_IMAGE"
    },
    "TableClass": "STANDARD",
    "TableName": {
     "Fn::Sub": [
      "${stackName}-reconciler",
      {
       "stackName": {
        "Ref": "AWS::StackName"
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "AppManagerCFNStackKey",
      "Value": {
       "Fn::Sub": [
        "${stackId}",
        {
         "stackId": {
          "Ref": "AWS::StackId"
         }
        }
       ]
      }
     },
     {
      "Key": "gitpod:stack",
      "Value": {
       "Fn::Sub": [
        "${stackName}",
        {
         "stackName": {
          "Ref": "AWS::StackName"
         }
        }
       ]
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ec2runnerdynamoaccess9B9A9AA0": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "used by the Gitpod Flex EC2 runner to access DynamoDB",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeTable",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:PartiQLSelect",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListStreams",
        "dynamodb:Scan",
        "dynamodb:DeleteItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ec2runnertableresourcesF4296A57",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ec2runnertableresourcesF4296A57",
          "StreamArn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodec2runnerclusterF7F6BC45": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": {
     "Fn::Sub": [
      "${stackName}-gitpod-ec2-runner",
      {
       "stackName": {
        "Ref": "AWS::StackName"
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "AppManagerCFNStackKey",
      "Value": {
       "Fn::Sub": [
        "${stackId}",
        {
         "stackId": {
          "Ref": "AWS::StackId"
         }
        }
       ]
      }
     },
     {
      "Key": "gitpod:stack",
      "Value": {
       "Fn::Sub": [
        "${stackName}",
        {
         "stackName": {
          "Ref": "AWS::StackName"
         }
        }
       ]
      }
     }
    ]
   }
  },
  "gitpodec2runnercluster4FBDD9D8": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "gitpodec2runnerclusterF7F6BC45"
    },
    "DefaultCapacityProviderStrategy": []
   }
  },
  "gitpodec2runnerroleE0345090": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Sub": [
           "arn:aws:ecs:${region}:${accountID}:*",
           {
            "accountID": {
             "Ref": "AWS::AccountId"
            },
            "region": {
             "Ref": "AWS::Region"
            }
           }
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
    ],
    "Tags": [
     {
      "Key": "AppManagerCFNStackKey",
      "Value": {
       "Fn::Sub": [
        "${stackId}",
        {
         "stackId": {
          "Ref": "AWS::StackId"
         }
        }
       ]
      }
     },
     {
      "Key": "gitpod:stack",
      "Value": {
       "Fn::Sub": [
        "${stackName}",
        {
         "stackName": {
          "Ref": "AWS::StackName"
         }
        }
       ]
      }
     }
    ]
   }
  },
  "gitpodec2runnerroleDefaultPolicy309DCBF8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:SendCommand",
        "ssm:GetCommandInvocation"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Sub": [
          "arn:aws:ec2:${region}:${accountID}:instance/*",
          {
           "accountID": {
            "Ref": "AWS::AccountId"
           },
           "region": {
            "Ref": "AWS::Region"
           }
          }
         ]
        },
        {
         "Fn::Sub": [
          "arn:aws:ssm:${region}:${accountID}:document/AWS-RunShellScript",
          {
           "accountID": {
            "Ref": "AWS::AccountId"
           },
           "region": {
            "Ref": "AWS::Region"
           }
          }
         ]
        },
        "arn:aws:ssm:*:*:document/AWS-RunShellScript"
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "S3AccessRole49D67050",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gitpodec2runnerroleDefaultPolicy309DCBF8",
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodec2runnerpolicyE1427588": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:*",
        "iam:GetRole",
        "iam:PassRole"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gitpodec2runnerpolicyE1427588",
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodec2runnercfpolicy818E477A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudformation:DescribeStacks",
       "Effect": "Allow",
       "Resource": {
        "Fn::Sub": [
         "arn:aws:cloudformation:${region}:${accountID}:stack/${stackName}/*",
         {
          "accountID": {
           "Ref": "AWS::AccountId"
          },
          "region": {
           "Ref": "AWS::Region"
          },
          "stackName": {
           "Ref": "AWS::StackName"
          }
         }
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gitpodec2runnercfpolicy818E477A",
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodssmrunnerpolicyC09712A0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ssm:DescribeParameters",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ssm:GetParameters",
       "Effect": "Allow",
       "Resource": {
        "Fn::Sub": [
         "arn:aws:ssm:${region}:${accountID}:parameter/*",
         {
          "accountID": {
           "Ref": "AWS::AccountId"
          },
          "region": {
           "Ref": "AWS::Region"
          }
         }
        ]
       }
      },
      {
       "Action": [
        "ssm:PutParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParametersByPath",
        "ssm:GetParameters",
        "ssm:GetParameter",
        "ssm:DeleteParameter"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Sub": [
          "${regionAccount}:parameter${ssmKey}",
          {
           "regionAccount": {
            "Fn::Sub": [
             "arn:aws:ssm:${region}:${accountID}",
             {
              "accountID": {
               "Ref": "AWS::AccountId"
              },
              "region": {
               "Ref": "AWS::Region"
              }
             }
            ]
           },
           "ssmKey": {
            "Fn::Join": [
             "",
             [
              "/gitpod/runner/",
              {
               "Ref": "RunnerID"
              }
             ]
            ]
           }
          }
         ]
        },
        {
         "Fn::Sub": [
          "arn:aws:ssm:${region}:${accountID}:parameter/gitpod/runner/environments/*",
          {
           "accountID": {
            "Ref": "AWS::AccountId"
           },
           "region": {
            "Ref": "AWS::Region"
           }
          }
         ]
        },
        {
         "Fn::Sub": [
          "${ssmPrefix}:parameter/gitpod/runner/environments-userdata-template",
          {
           "ssmPrefix": {
            "Fn::Sub": [
             "arn:aws:ssm:${region}:${accountID}",
             {
              "accountID": {
               "Ref": "AWS::AccountId"
              },
              "region": {
               "Ref": "AWS::Region"
              }
             }
            ]
           }
          }
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gitpodssmrunnerpolicyC09712A0",
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodsecretsmanagerpolicy59446019": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:CreateSecret",
        "secretsmanager:PutSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Sub": [
         "arn:aws:secretsmanager:${region}:${accountID}:secret:${runnerTokenSecret}-??????",
         {
          "accountID": {
           "Ref": "AWS::AccountId"
          },
          "region": {
           "Ref": "AWS::Region"
          },
          "runnerTokenSecret": {
           "Fn::Sub": [
            "${region}-${stackName}-runner-token",
            {
             "region": {
              "Ref": "AWS::Region"
             },
             "stackName": {
              "Ref": "AWS::StackName"
             }
            }
           ]
          }
         }
        ]
       }
      },
      {
       "Action": "secretsmanager:CreateSecret",
       "Condition": {
        "StringLike": {
         "secretsmanager:Name": {
          "Fn::Sub": [
           "${region}-${stackName}-runner-token",
           {
            "region": {
             "Ref": "AWS::Region"
            },
            "stackName": {
             "Ref": "AWS::StackName"
            }
           }
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "gitpodsecretsmanagerpolicy59446019",
    "Roles": [
     {
      "Ref": "gitpodec2runnerroleE0345090"
     }
    ]
   }
  },
  "gitpodec2runnertaskD9AF0259": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "daemon",
       {
        "Fn::Sub": [
         "--ssm-key=${ssmKey}",
         {
          "ssmKey": {
           "Fn::Join": [
            "",
            [
             "/gitpod/runner/",
             {
              "Ref": "RunnerID"
             }
            ]
           ]
          }
         }
        ]
       },
       {
        "Fn::Sub": [
         "--runner-token-secret=${tokenSecret}",
         {
          "tokenSecret": {
           "Fn::Sub": [
            "${region}-${stackName}-runner-token",
            {
             "region": {
              "Ref": "AWS::Region"
             },
             "stackName": {
              "Ref": "AWS::StackName"
             }
            }
           ]
          }
         }
        ]
       }
      ],
      "Env
